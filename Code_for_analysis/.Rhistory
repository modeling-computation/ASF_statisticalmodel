used_data$time <- as.numeric(used_data$time)
used_data$distance <- exp(-1 * used_data$distance)
used_data$sin <- sin(2*pi*used_data$time/52)
use_colnames <- c('time', 'infected', 'time_num', 'sin', 'distance', 'forest', 'NUMPOINTS', 'season', 'SIG_CD', 'x', 'y')
data <- used_data[, use_colnames]
# add distance^2
data$distance2 <- data$distance^2
# Add observation error variables
data$intensity <- surveillance_intensity
data$obs_error <- (3-data$intensity)
data[data$intensity == 0, 'obs_error'] <- 0
# Add observation error with surveillance intensity
set_error1 <- 0.25
data$Y1 <- round(data$NUMPOINTS + 0.25*data$NUMPOINTS)
data[which((data$Y1 - data$NUMPOINTS) > 10),]
# For error : 0.1
# Poisson GLM for first period
mod_1 = glm(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y1[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y1[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y1[data$time >= 20220901 & data$time <= 20221231]
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y1')
# Negbin rank test
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred2, dat = true2, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y1')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred3, dat = true3, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred3, pp, 'Y1')
mod_11 = glm(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
family = poisson(link = 'log'))
mod_22 = glm.nb(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num +  season,
data = data %>% filter(time < 20230101))
mod_33 = hurdle(Y1 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
dist = 'poisson', zero.dist = 'binomial')
pred11 <- round(predict(mod_11, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true11 <- data$Y1[data$time >= 20230101 & data$time <= 20230431]
pred22 <- round(predict(mod_22, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true22 <- data$Y1[data$time >= 20230101 & data$time <= 20230431]
pred33 <- round(predict(mod_33, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true33 <- data$Y1[data$time >= 20230101 & data$time <= 20230431]
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred11, dat = true11, total_iter = 1, iter = 10000)
end_time <- Sys.time()
# Poisson risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred11, pp, 'Y1')
# Negbin rank test
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred22, dat = true22, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred22, pp, 'Y1')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred33, dat = true33, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred33, pp, 'Y1')
# Add observation error with surveillance intensity
data$Y2 <- round(data$NUMPOINTS + 0.5*data$NUMPOINTS)
library(dplyr)
library(spdep)
library(ggplot2)
library(tidyr)
library(readxl)
library(sp)
library(magrittr)
library(terra)
library(sf)
library(MASS)
library(pscl)
source('./test_functions.r')
load('../Data/surv_intensity_week.Rdata')
# Set path
gpd_file_path = '../Data/'
surv_file <- st_read(paste0(gpd_file_path, 'korea_with_surveillance.shp'))
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# Data
shp <- st_read(paste0(gpd_file_path, 'shp통합4.shp'))
coord <- read_excel(paste0(gpd_file_path, '시군구위도경도.xlsx'))
used_data <- read.csv('../Data/weekly_merge.csv', header = TRUE)
surv_data <- read.csv('../Data/add_surveilance.csv', header = TRUE)
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# sort and add infected
used_data <- used_data %>% arrange(SIG_CD, time)
used_data['infected'] <- surv_data$Infected
# Convert some types
used_data$time <- as.numeric(used_data$time)
used_data$distance <- exp(-1 * used_data$distance)
used_data$sin <- sin(2*pi*used_data$time/52)
use_colnames <- c('time', 'infected', 'time_num', 'sin', 'distance', 'forest', 'NUMPOINTS', 'season', 'SIG_CD', 'x', 'y')
data <- used_data[, use_colnames]
# add distance^2
data$distance2 <- data$distance^2
# Add observation error variables
data$intensity <- surveillance_intensity
data$obs_error <- (3-data$intensity)
data[data$intensity == 0, 'obs_error'] <- 0
# Add observation error with surveillance intensity
data$Y2 <- round(data$NUMPOINTS + 0.5*data$NUMPOINTS)
mod_1 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
# Add observation error with surveillance intensity
data$Y2 <- round(data$NUMPOINTS + 0.25*data$NUMPOINTS)
#######################
# For error : 0.2
# Poisson GLM for first period
mod_1 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
# Negbin rank test
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred2, dat = true2, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred3, dat = true3, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred3, pp, 'Y2')
# Poisson GLM for second period
mod_11 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
family = poisson(link = 'log'))
mod_22 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num +  season,
data = data %>% filter(time < 20230101))
mod_33 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
dist = 'poisson', zero.dist = 'binomial')
pred11 <- round(predict(mod_11, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true11 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
pred22 <- round(predict(mod_22, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true22 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
pred33 <- round(predict(mod_33, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true33 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
# Check improvement
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred11, dat = true11, total_iter = 1, iter = 10000)
end_time <- Sys.time()
# Poisson risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred11, pp, 'Y2')
# Negbin rank test
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred22, dat = true22, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred22, pp, 'Y2')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred33, dat = true33, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred33, pp, 'Y2')
library(dplyr)
library(spdep)
library(ggplot2)
library(tidyr)
library(readxl)
library(sp)
library(magrittr)
library(terra)
library(sf)
library(MASS)
library(pscl)
source('./test_functions.r')
load('../Data/surv_intensity_week.Rdata')
# Set path
gpd_file_path = '../Data/'
surv_file <- st_read(paste0(gpd_file_path, 'korea_with_surveillance.shp'))
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# Data
shp <- st_read(paste0(gpd_file_path, 'shp통합4.shp'))
coord <- read_excel(paste0(gpd_file_path, '시군구위도경도.xlsx'))
used_data <- read.csv('../Data/weekly_merge.csv', header = TRUE)
surv_data <- read.csv('../Data/add_surveilance.csv', header = TRUE)
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# sort and add infected
used_data <- used_data %>% arrange(SIG_CD, time)
used_data['infected'] <- surv_data$Infected
# Convert some types
used_data$time <- as.numeric(used_data$time)
used_data$distance <- exp(-1 * used_data$distance)
used_data$sin <- sin(2*pi*used_data$time/52)
use_colnames <- c('time', 'infected', 'time_num', 'sin', 'distance', 'forest', 'NUMPOINTS', 'season', 'SIG_CD', 'x', 'y')
data <- used_data[, use_colnames]
# add distance^2
data$distance2 <- data$distance^2
# Add observation error variables
data$intensity <- surveillance_intensity
data$obs_error <- (3-data$intensity)
data[data$intensity == 0, 'obs_error'] <- 0
# For error : 0.1
# Poisson GLM for first period
mod_1 = glm(infected ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(infected ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(infected ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$infected[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$infected[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$infected[data$time >= 20220901 & data$time <= 20221231]
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, infected = 'infected')
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, infected = 'infected')
mod_11 = glm(infected ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
family = poisson(link = 'log'))
pred11 <- round(predict(mod_11, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true11 <- data$infected[data$time >= 20230101 & data$time <= 20230431]
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred11, dat = true11, total_iter = 1, iter = 10000)
end_time <- Sys.time()
# Poisson risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred11, pp, 'infected')
1/1.25
1/1.5
######################
# most highest observed region
data1 <- data %>% filter(time >= 20220901 & time <= 20221231)
data2 <- data %>% filter(time >= 20230101 & time <= 20230431)
data1
data1 %>% group_by(SIG_CD) %>% summarise(est_pred = sum(pred),
est_true = sum(true)) %>%
arrange(desc(est_pred))
data1
data1 %>% group_by(SIG_CD) %>% summarise(num_sum = sum(NUMPOINTS))
data1 %>% group_by(SIG_CD) %>% summarise(num_sum = sum(NUMPOINTS)) %>% arrange(desc(num_sum))
data2 %>% group_by(SIG_CD) %>% summarise(num_sum = sum(NUMPOINTS)) %>% arrange(desc(num_sum))
data1 %>% colnames
data1 %>% time %>% unique
data1$time %>% unique
data2$time %>% unique
# Add observation error with surveillance intensity
data$Y2 <- round(data$NUMPOINTS + 0.5*data$NUMPOINTS)
library(dplyr)
library(spdep)
library(ggplot2)
library(tidyr)
library(readxl)
library(sp)
library(magrittr)
library(terra)
library(sf)
library(MASS)
library(pscl)
source('./test_functions.r')
load('../Data/surv_intensity_week.Rdata')
# Set path
gpd_file_path = '../Data/'
surv_file <- st_read(paste0(gpd_file_path, 'korea_with_surveillance.shp'))
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# Data
shp <- st_read(paste0(gpd_file_path, 'shp통합4.shp'))
coord <- read_excel(paste0(gpd_file_path, '시군구위도경도.xlsx'))
used_data <- read.csv('../Data/weekly_merge.csv', header = TRUE)
surv_data <- read.csv('../Data/add_surveilance.csv', header = TRUE)
surv_file$SIG_CD <- as.numeric(surv_file$SIG_CD)
# sort and add infected
used_data <- used_data %>% arrange(SIG_CD, time)
used_data['infected'] <- surv_data$Infected
# Convert some types
used_data$time <- as.numeric(used_data$time)
used_data$distance <- exp(-1 * used_data$distance)
used_data$sin <- sin(2*pi*used_data$time/52)
use_colnames <- c('time', 'infected', 'time_num', 'sin', 'distance', 'forest', 'NUMPOINTS', 'season', 'SIG_CD', 'x', 'y')
data <- used_data[, use_colnames]
# add distance^2
data$distance2 <- data$distance^2
# Add observation error variables
data$intensity <- surveillance_intensity
data$obs_error <- (3-data$intensity)
data[data$intensity == 0, 'obs_error'] <- 0
# Add observation error with surveillance intensity
data$Y2 <- round(data$NUMPOINTS + 0.5*data$NUMPOINTS)
# Poisson GLM for first period
mod_1 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
data$Y2 <- round(data$NUMPOINTS + 1*data$NUMPOINTS)
#######################
# For error : 0.2
# Poisson GLM for first period
mod_1 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred, dat = true, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
# Negbin rank test
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred2, dat = true2, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
d
pp
table(pp)
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
pred2
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
d
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred2, dat = true2, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
mod_1 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
family = poisson(link = 'log'))
mod_2 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901))
mod_3 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20220901),
dist = 'poisson', zero.dist = 'binomial')
pred <- round(predict(mod_1, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred2 <- round(predict(mod_2, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true2 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
pred3 <- round(predict(mod_3, newdata = data %>% filter(time >= 20220901 & time <= 20221231), type = 'response'))
true3 <- data$Y2[data$time >= 20220901 & data$time <= 20221231]
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
length(pred2)
length(pred)
# Negbin risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred2, pp, 'Y2')
# Poisson risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred, pp, 'Y2')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred3, dat = true3, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20220901 & time <= 20221231),
pred3, pp, 'Y2')
mod_11 = glm(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
family = poisson(link = 'log'))
mod_22 = glm.nb(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num +  season,
data = data %>% filter(time < 20230101))
mod_33 = hurdle(Y2 ~ offset(log(forest))  + distance + distance2 +  time_num + season,
data = data %>% filter(time < 20230101),
dist = 'poisson', zero.dist = 'binomial')
pred11 <- round(predict(mod_11, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true11 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
pred22 <- round(predict(mod_22, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true22 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
pred33 <- round(predict(mod_33, newdata = data %>% filter(time >= 20230101 & time <= 20230431), type = 'response'))
true33 <- data$Y2[data$time >= 20230101 & data$time <= 20230431]
# Poisson rank test
start_time <- Sys.time()
pp <- scan_pois_rank(est = pred11, dat = true11, total_iter = 1, iter = 10000)
end_time <- Sys.time()
# Poisson risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred11, pp, 'Y2')
start_time <- Sys.time()
pp <- scan_negbin_rank(est = pred22, dat = true22, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# Negbin risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred22, pp, 'Y2')
# Hurdle rank test
start_time <- Sys.time()
pp <- scan_hurdle_rank(est = pred33, dat = true33, total_iter = 1, iter = 10000)
end_time <- Sys.time()
print(end_time - start_time)
# ZIP risk score
risk_score(data %>% filter(time >= 20230101 & time <= 20230431),
pred33, pp, 'Y2')
